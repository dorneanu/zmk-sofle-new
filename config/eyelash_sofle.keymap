#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include "keys-swedish.h"

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    SandS: SandS {
        compatible = "zmk,behavior-hold-tap";
        label = "SANDS";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "hold-preferred";
        retro-tap;
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BKSPC |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   Å   |
// | SHIFT |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   Ö   |   Ä   |
// | LCTRL |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |  JOY  |  N   |  M    |  ,    |  .   |   -   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  SPACE |  | ENTER | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE       &kp SE_1      &kp SE_2      &kp SE_3        &kp SE_4      &kp SE_5       &mmv MOVE_Y(-600)  &kp SE_6      &kp SE_7      &kp SE_8           &kp SE_9      &kp SE_0       &kp BACKSPACE
&kp TAB          &kp Q         &kp W         &kp E           &kp R         &kp T          &mmv MOVE_Y(600)   &kp Y         &kp U         &kp I              &kp O         &kp P          &kp LBKT
&kp LEFT_SHIFT   &kp A         &kp S         &kp D           &kp F         &kp G          &mmv MOVE_X(-600)  &kp H         &kp J         &kp K              &kp L         &kp SEMICOLON  &kp SQT
&kp LCTRL        &kp Z         &kp X         &kp C           &kp V         &kp B          &mmv MOVE_X(600)   &kp N         &kp M         &kp COMMA          &kp PERIOD    &kp FSLH       &kp RIGHT_SHIFT
&kp C_MUTE       &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL       &mo 1         &lt 2 SPACE    &mkp LCLK    	     &kp RETURN    &mo 2         &kp RIGHT_CONTROL  &kp RIGHT_ALT &kp RIGHT_GUI  
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "mac-base";
        };

        layer_1 {
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  DEL  |
// |   §   |  1  |  2  |  3   |  4   |  5   |                   |  {   |   }   |  [    |  ]   |   `   |       |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  &   |   /   |  *    |  (   |   )   |   '   |
// |       |  =  |  +  |  \   |  _   |      |        |  |  MUS  |      |   <   |  >    |  |   |       |       |
//               |     |      |      |      |        |  |       |      |       |       |      |

            display-name = "win-base";
            bindings = <
&none            &kp F1        &kp F2        &kp F3          &kp F4                 &kp F5           &kp C_PLAY     	   &kp F6             &kp F7             &kp F8                &kp F9                 &kp F10                &kp DELETE
&kp GRAVE        &kp N1        &kp N2        &kp N3          &kp N4                 &kp N5           &kp LS(LG(NUMBER_2))  &kp SE_LCBR        &kp SE_RCBR        &kp SE_LBRC           &kp SE_RBRC            &kp PLUS               &kp SQT
&none            &kp EXCL      &kp SE_AT     &kp POUND       &kp SE_DLR             &kp PERCENT      &kp C_PREVIOUS        &kp CARET          &kp AMPS           &kp KP_MULTIPLY       &kp KP_LPAR            &kp KP_RPAR            &kp BACKSLASH
&none 	 	 &kp KP_EQUAL  &kp PLUS      &kp SE_BSLS     &kp QUESTION           &none            &kp C_NEXT            &trans             &kp UNDER          &kp SE_LABK           &kp SE_RABK            &kp SE_PIPE            &trans           
&trans           &trans        &trans        &trans          &trans                 &trans           &none                 &trans             &trans             &trans                &trans                 &trans                 
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
		
        layer_2 {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1  | BT2  |  BT3  |  BT4  | BT5  |                |      |      |       |      |       |       |
// |       | INS  | PSCR |   £   |       |      |                | PGUP |      |   ^   |      |       |   ?   |
// |       | REDO | CAPS |   €   |       |      |                | PGDN |   <- |   v   |  ->  |       |   \   |
// |       | UNDO |  CUT | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4    &trans     &trans       &trans            &trans          &trans           &trans   &trans
&trans       &kp INSERT    &kp PSCRN      &kp SE_PND     &trans         &trans          &trans     &kp PG_UP    &trans            &kp UP_ARROW    &trans           &trans   &kp SE_QUES
&trans       &kp K_REDO    &kp CAPS       &kp SE_EUR     &trans         &trans          &trans     &kp PG_DN    &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans   &kp SE_BSLS
&trans       &kp K_UNDO    &kp K_CUT      &kp K_COPY     &kp K_CUT      &kp K_PASTE     &trans     &trans       &trans            &trans          &trans           &trans   &trans
&trans       &trans        &trans         &trans         &trans         &trans          &trans     &trans       &trans            &trans          &trans           &trans
            >;
        };
    };
};
